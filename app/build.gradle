apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$project.rootDir/tools/git-version.gradle"

def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "fr.simonlebras.radiofrance"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "FIREBASE_ENDPOINT", "\"https://radio-france-77818.firebaseapp.com\""
    }

    dexOptions {
        preDexLibraries true
    }

    aaptOptions {
        cruncherEnabled = false
    }

    kapt {
        generateStubs = true
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    productFlavors {
        prod {
            versionCode gitVersionCode
            versionName gitVersionName
        }

        dev {
            minSdkVersion 21
            versionCode gitVersionCodeTime
            versionName gitVersionName
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            productFlavors.prod.signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    variantFilter { variant ->
        if (variant.buildType.name == 'release') {
            variant.flavors.each { flavor ->
                if (flavor.name == 'dev') {
                    variant.ignore = true
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile "com.google.code.findbugs:jsr305:$rootProject.jsr305Version"
    testCompile "junit:junit:$rootProject.jUnitVersion"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:mediarouter-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    compile "com.google.android.gms:play-services-cast-framework:$rootProject.playServicesVersion"
    releaseCompile "com.google.firebase:firebase-crash:$rootProject.playServicesVersion"

    compile "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    compile "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxBindingVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rootProject.rxBindingVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rootProject.rxBindingVersion"

    compile "com.squareup.moshi:moshi:$rootProject.moshiVersion"

    compile "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"

    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"

    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    compile("com.github.bumptech.glide:okhttp3-integration:$rootProject.glideOkHttpVersion") {
        exclude group: 'glide-parent'
    }

    compile "com.google.android.exoplayer:exoplayer:$rootProject.exoPlayerVersion"

    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"

    compile "com.facebook.stetho:stetho:$rootProject.stethoVersion"
    compile "com.facebook.stetho:stetho-okhttp3:$rootProject.stethoVersion"
    compile "com.facebook.stetho:stetho-timber:$rootProject.stethoVersion"
}

apply plugin: 'com.google.gms.google-services'
